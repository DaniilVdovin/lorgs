version: '3.7'

x-env: &env
  env_file:
    - .env
  environment:
    REDIS_URL: redis://redis:6379
    SQLALCHEMY_DATABASE_URI: postgresql://${MYSQL_USER}:${MYSQL_PASSWORD}@db/${MYSQL_DATABASE}


x-pybase: &pybase # shared config for all main python services
  image: lorgs
  # volumes:
  #   - ./lorgs:/app/lorgs
  depends_on:
    - redis
    - db


services:


  web:
    <<: *pybase
    <<: *env
    build:
      context: lorgs
      dockerfile: Dockerfile

    command: gunicorn
      --bind 0.0.0.0:5000
      "lorgs.app:create_app()"
      --worker-tmp-dir /dev/shm
      --workers=4
    ports:
      - "${PORT:-5010}:5000"


  celery_worker:
    <<: *pybase
    <<: *env
    command: celery
      --app=lorgs.celery
      worker
      --loglevel=INFO
      --concurrency=4
    depends_on:
      - web

  redis:
    image: redis


  # db:
  #   build: db
  #   <<: *env
  #   ports:
  #   - 3306:3306
  #   volumes:
  #     - data-db:/var/lib/mysql
  db:
    image: postgres
    # restart: always
    environment:
      POSTGRES_USER: ${MYSQL_USER}
      POSTGRES_PASSWORD: ${MYSQL_PASSWORD}
      POSTGRES_DB: ${MYSQL_DATABASE}
    ports:
    - 5432:5432
    volumes:
      - data-db:/var/lib/postgresql/data


volumes:
  data-db:

# docker run -it --network="host" windok/redis-browser bash
# docker run --rm -p 8081:8081 --env REDIS_HOST=lorgs-redis rediscommander/redis-commander

